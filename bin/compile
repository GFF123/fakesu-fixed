#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>
set -e

mktmpdir() {
  dir=$(mktemp -t fakesu-$1-XXXX)
  rm -rf $dir
  mkdir -p $dir
  echo $dir
}

function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

BUILDPACK_DIR=`cd $(dirname $0); cd ..; pwd`
BUILD_DIR=$1
CACHE_DIR=$2

WGET_BUILD="$(mktmpdir wget)"
DEBOOTSTRAP_BUILD="$(mktmpdir debootstrap)"
FAKECHROOT_BUILD="$(mktmpdir fakechroot)"

mkdir -p $BUILD_DIR/.tools/fakechroot
mkdir -p $CACHE_DIR/.tools/{wget,debootstrap}

export PATH=/sbin:/usr/sbin:$PATH:$CACHE_DIR/.tools/wget/bin:$CACHE_DIR/.tools/debootstrap/usr/sbin:$BUILD_DIR/.tools/fakechroot/sbin:$BUILD_DIR/.tools/fakechroot/bin
export DEBOOTSTRAP_DIR=$CACHE_DIR/.tools/debootstrap/usr/share/debootstrap
export LD_LIBRARY_PATH=/lib/x86_64-linux-gnu
export LFAKEPATH=$BUILD_DIR/.apt/usr/lib/x86_64-linux-gnu/fakechroot/libfakechroot.so

#echo "-----> Fetching and installing wget"
#cd $WGET_BUILD
#curl -O http://ftp.gnu.org/gnu/wget/wget-1.13.4.tar.bz2
#tar jxvf wget-1.13.4.tar.bz2
#cd wget-1.13.4
#./configure --prefix=$CACHE_DIR/.tools/wget --without-ssl
#make
#make install
#echo "wget installed" | indent

#echo "-----> Fetching and installing debootstrap"
#cd $DEBOOTSTRAP_BUILD
#wget http://archive.ubuntu.com/ubuntu/pool/main/d/debootstrap/debootstrap_1.0.55.tar.gz
#tar zxvf debootstrap_1.0.55.tar.gz
#cd debootstrap-1.0.55
#DESTDIR=$CACHE_DIR/.tools/debootstrap fakeroot make
#DESTDIR=$CACHE_DIR/.tools/debootstrap fakeroot make install
#echo "debootstrap installed" | indent

#echo "-----> Fetching, installing and vendoring fakechroot into /app/.tools/fakechroot/"
#cd $FAKECHROOT_BUILD
#git clone git://github.com/fabiokung/fakechroot.git
#cd fakechroot
#./autogen.sh
#./configure --prefix=$BUILD_DIR/.tools/fakechroot
#make
#make install
#echo "fakechroot vendored" | indent

cd $BUILDPACK_DIR
echo "-----> Bootstrapping a new base ubuntu trusty into /app/.root/"
mkdir -p $BUILD_DIR/.root
fakechroot -l $LFAKEPATH fakeroot-ng debootstrap --no-check-gpg --verbose --variant=fakechroot trusty $BUILD_DIR/.root || cat $BUILD_DIR/.root/debootstrap/debootstrap.log
fakechroot -l $LFAKEPATH fakeroot-ng chroot $BUILD_DIR/.root apt install -y --force-yes gpgv
echo "/app/.root bootstrapped" | indent

sed -i -e "s/#force_color_prompt=yes/force_color_prompt=yes/" $BUILD_DIR/.root/root/.bashrc
echo "export PATH=/sbin:/usr/sbin:\$PATH" >> $BUILD_DIR/.root/root/.bashrc
echo "cd $HOME" >> $BUILD_DIR/.root/root/.bashrc

echo "-----> Updating packages"
fakechroot -l $LFAKEFATH fakeroot-ng chroot $BUILD_DIR/.root bash -c "cat > /etc/apt/sources.list <<EOF
deb http://archive.ubuntu.com/ubuntu trusty main universe
deb http://archive.ubuntu.com/ubuntu trusty-security main
deb http://archive.ubuntu.com/ubuntu trusty-updates main
EOF"
fakechroot -l $LFAKEPATH fakeroot-ng chroot $BUILD_DIR/.root apt update
echo "packages updated" | indent

cd $BUILD_DIR/.root
ln -s ../ app

mkdir -p $BUILD_DIR/bin
cp $BUILDPACK_DIR/bin/fakesu $BUILD_DIR/bin
cp $BUILDPACK_DIR/bin/aws $BUILD_DIR/bin

exit 0

